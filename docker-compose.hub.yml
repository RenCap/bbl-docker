version: "3.7"
services:
  db:
    image: "postgres:12.0"
    ports:
      - "5432:5432"
    volumes:
      - bbl-volume:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: bbl
      POSTGRES_PASSWORD: bbl
      POSTGRES_DB: bbl
    networks:
      - backend
    deploy:
      placement:
        constraints: [node.role == manager]
  smtp:
    image: "mailhog/mailhog"
    ports:
      - "1025:1025"
      - "8025:8025"
    networks:
      - backend
      - frontend
  api:
    image: "r3nc4p/bbl-docker-api:1.0.0"
    environment:
      DS_HOST: db
      SMTP_HOST: smtp
    ports:
      - "8080:8080"
    networks:
      - frontend
      - backend
    depends_on:
      - db
      - smtp
    deploy:
      replicas: 3
      restart_policy:
        condition: on-failure
        delay: 5s
  app:
    image: "r3nc4p/bbl-docker-app:1.0.0"
    ports:
      - "4200:80"
    environment:
      ENVIRONMENT: "production"
      API_URL: "http://api:8080"
    depends_on:
      - api
    networks:
      - frontend
    deploy:
      replicas: 2
      restart_policy:
        condition: on-failure
  visualizer:
    image: dockersamples/visualizer:stable
    ports:
      - "8888:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    deploy:
      placement:
        constraints: [node.role == manager]
volumes:
  bbl-volume:
networks:
  backend:
  frontend:
